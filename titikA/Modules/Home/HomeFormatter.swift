//
//  HomeFormatter.swift
//  titikA
//
//  Created by Afriyandi Setiawan on 21/04/20.
//  Copyright (c) 2020 phe@work. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

enum FormatterFor {
    case table
    case hero(role: String)
}

final class HomeFormatter {
    private func formatDataTable(data: [BaseModel]) -> [String] {
        var roles:Array<String> = []
        _ = data.compactMap { (b) in
            roles.mergeElements(newElements: b.roles ?? [])
        }
        return roles
    }
    
    private func formatDataHero(data: [BaseModel], role: String) -> [BaseModel] {
        return data.filter { (b) -> Bool in
            (b.roles?.contains(role) ?? false)
        }
    }
}

// MARK: - Extensions -

extension HomeFormatter: HomeFormatterInterface {
    func formatFor<T,R>(type: FormatterFor, data: T) -> [R]? {
        switch type {
        case .table:
            guard let data = data as? [BaseModel] else {
                return nil
            }
            return formatDataTable(data: data) as? [R]
        case .hero(let role):
            guard let data = data as? [BaseModel] else {
                return nil
            }
            return formatDataHero(data: data, role: role) as? [R]
        }
    }
}
